name: 'Rebel CI/CD 🚀'
on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'main'


jobs:
  build:
    name: 'Build 🏗️'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build

  # code_quality:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Install dependencies
  #       run: npm install
  #     - name: Run ESLint (same as build)
  #       run: npm ci

  docker_operations:
    name: 'Docker Build and Push🐳'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') && success()
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Docker image
        if: startsWith(github.ref, 'refs/tags/') != true && success()
        run: |
          docker build -t ghcr.io/${{ secrets.NAMESPACE }}/${{ secrets.IMAGE_NAME }}:${GITHUB_SHA::7} .
      - name: Push Docker image
        if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') && success()
        run: |
          docker build -t ghcr.io/${{ secrets.NAMESPACE }}/${{ secrets.IMAGE_NAME }}:${GITHUB_REF/refs\/tags\//} .
          docker push ghcr.io/${{ secrets.NAMESPACE }}/${{ secrets.IMAGE_NAME }}:${GITHUB_REF/refs\/tags\//}
